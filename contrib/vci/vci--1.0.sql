CREATE FUNCTION vci_handler(internal)
RETURNS index_am_handler
AS 'MODULE_PATHNAME'
LANGUAGE C VOLATILE STRICT;

CREATE ACCESS METHOD vci TYPE index HANDLER vci_handler;

CREATE OPERATOR CLASS bool_ops        DEFAULT FOR TYPE bool        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS bytea_ops       DEFAULT FOR TYPE bytea       USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS char_ops        DEFAULT FOR TYPE "char"      USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS name_ops        DEFAULT FOR TYPE name        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS int8_ops        DEFAULT FOR TYPE int8        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS int2_ops        DEFAULT FOR TYPE int2        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS int4_ops        DEFAULT FOR TYPE int4        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS text_ops        DEFAULT FOR TYPE text        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS float4_ops      DEFAULT FOR TYPE float4      USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS float8_ops      DEFAULT FOR TYPE float8      USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS money_ops       DEFAULT FOR TYPE money       USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS bpchar_ops      DEFAULT FOR TYPE bpchar      USING vci AS OPERATOR 1 =;
-- CREATE OPERATOR CLASS varchar_ops     DEFAULT FOR TYPE varchar     USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS date_ops        DEFAULT FOR TYPE date        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS time_ops        DEFAULT FOR TYPE time        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS timestamp_ops   DEFAULT FOR TYPE timestamp   USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS timestamptz_ops DEFAULT FOR TYPE timestamptz USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS interval_ops    DEFAULT FOR TYPE interval    USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS timetz_ops      DEFAULT FOR TYPE timetz      USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS bit_ops         DEFAULT FOR TYPE bit         USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS varbit_ops      DEFAULT FOR TYPE varbit      USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS numeric_ops     DEFAULT FOR TYPE numeric     USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS uuid_ops        DEFAULT FOR TYPE uuid        USING vci AS OPERATOR 1 =;
CREATE OPERATOR CLASS tid_ops         DEFAULT FOR TYPE tid         USING vci AS OPERATOR 1 =;
-- CREATE OPERATOR CLASS nvarchar_ops    DEFAULT FOR TYPE nvarchar    USING vci AS OPERATOR 1 =;

CREATE FUNCTION vci_check_supported_functions()
RETURNS void
AS 'MODULE_PATHNAME'
LANGUAGE C STABLE STRICT;

CREATE FUNCTION vci_check_supported_types()
RETURNS void
AS 'MODULE_PATHNAME'
LANGUAGE C STABLE STRICT;

CREATE FUNCTION vci_index_size(IN vci_index_name text, OUT size int8)
AS 'MODULE_PATHNAME'
LANGUAGE C VOLATILE STRICT;

CREATE FUNCTION vci_enable() RETURNS void AS $$
	BEGIN
		SET vci.enable = on;
	END
$$ LANGUAGE plpgsql;

CREATE FUNCTION vci_disable() RETURNS void AS $$
	BEGIN
		SET vci.enable = off;
	END
$$ LANGUAGE plpgsql;

CREATE FUNCTION vci_runs_in_query()
RETURNS bool
AS 'MODULE_PATHNAME'
LANGUAGE C STABLE STRICT;

CREATE FUNCTION vci_runs_in_plan()
RETURNS bool
AS 'MODULE_PATHNAME'
LANGUAGE C VOLATILE STRICT;

CREATE FUNCTION vci_always_return_true()
RETURNS bool
AS 'MODULE_PATHNAME'
LANGUAGE C VOLATILE STRICT;

SELECT vci_check_supported_functions();
SELECT vci_check_supported_types();
